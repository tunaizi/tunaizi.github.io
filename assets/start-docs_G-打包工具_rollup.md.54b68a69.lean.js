import{_ as l,r as a,i as n,a as o}from"./chunks/framework.1cf9c55e.js";const y=JSON.parse('{"title":"Rollup","description":"","frontmatter":{},"headers":[{"level":2,"title":"什么是 Rollup?","slug":"什么是-rollup","link":"#什么是-rollup","children":[]},{"level":2,"title":"Rollup 的主要特点","slug":"rollup-的主要特点","link":"#rollup-的主要特点","children":[]},{"level":2,"title":"常见使用场景","slug":"常见使用场景","link":"#常见使用场景","children":[]},{"level":2,"title":"基础配置示例","slug":"基础配置示例","link":"#基础配置示例","children":[]},{"level":2,"title":"常用配置选项","slug":"常用配置选项","link":"#常用配置选项","children":[{"level":3,"title":"1. 多入口打包","slug":"_1-多入口打包","link":"#_1-多入口打包","children":[]},{"level":3,"title":"2. 外部依赖声明","slug":"_2-外部依赖声明","link":"#_2-外部依赖声明","children":[]},{"level":3,"title":"3. 生产环境优化","slug":"_3-生产环境优化","link":"#_3-生产环境优化","children":[]}]},{"level":2,"title":"常用插件","slug":"常用插件","link":"#常用插件","children":[]},{"level":2,"title":"命令行使用","slug":"命令行使用","link":"#命令行使用","children":[]},{"level":2,"title":"与其他打包工具的对比","slug":"与其他打包工具的对比","link":"#与其他打包工具的对比","children":[{"level":3,"title":"Rollup vs Webpack","slug":"rollup-vs-webpack","link":"#rollup-vs-webpack","children":[]},{"level":3,"title":"Rollup vs Vite","slug":"rollup-vs-vite","link":"#rollup-vs-vite","children":[]}]},{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]},{"level":2,"title":"什么是 IIFE","slug":"什么是-iife","link":"#什么是-iife","children":[]}],"relativePath":"start-docs/G-打包工具/rollup.md","filePath":"start-docs/G-打包工具/rollup.md"}'),p={name:"start-docs/G-打包工具/rollup.md"};function e(t,s,r,c,i,F){return a(),n("div",null,s[0]||(s[0]=[o(`<h1 id="rollup" tabindex="-1">Rollup <a class="header-anchor" href="#rollup" aria-label="Permalink to &quot;Rollup&quot;">​</a></h1><h2 id="什么是-rollup" tabindex="-1">什么是 Rollup? <a class="header-anchor" href="#什么是-rollup" aria-label="Permalink to &quot;什么是 Rollup?&quot;">​</a></h2><p>Rollup 是一个 JavaScript 模块打包器,专注于打包小型代码库和组件库。它可以将小块代码编译成大块复杂的代码,例如将你的应用程序或库打包成一个文件。</p><h2 id="rollup-的主要特点" tabindex="-1">Rollup 的主要特点 <a class="header-anchor" href="#rollup-的主要特点" aria-label="Permalink to &quot;Rollup 的主要特点&quot;">​</a></h2><ol><li><strong>Tree-shaking</strong>: 自动移除未使用的代码,生成更小的包体积</li><li><strong>ES 模块优先</strong>: 对 ES 模块有着良好的支持</li><li><strong>代码分割</strong>: 支持代码分割和动态导入</li><li><strong>高度可配置</strong>: 提供丰富的插件系统</li><li><strong>输出格式多样</strong>: 支持多种输出格式(ESM、CommonJS、UMD 等)</li></ol><h2 id="常见使用场景" tabindex="-1">常见使用场景 <a class="header-anchor" href="#常见使用场景" aria-label="Permalink to &quot;常见使用场景&quot;">​</a></h2><ul><li>打包 JavaScript 库</li><li>构建工具库/组件库</li><li>打包 Node.js 应用</li><li>作为应用开发的构建工具</li></ul><h2 id="基础配置示例" tabindex="-1">基础配置示例 <a class="header-anchor" href="#基础配置示例" aria-label="Permalink to &quot;基础配置示例&quot;">​</a></h2><div class="language-javascript codearea-link" id="bld9xjrw2yq"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> resolve </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@rollup/plugin-node-resolve&#39;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> commonjs </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@rollup/plugin-commonjs&#39;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> typescript </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@rollup/plugin-typescript&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 入口文件</span></span>
<span class="line"><span style="color:#F8F8F2;">  input: </span><span style="color:#E6DB74;">&#39;src/index.ts&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 输出配置</span></span>
<span class="line"><span style="color:#F8F8F2;">  output: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    dir: </span><span style="color:#E6DB74;">&#39;dist&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    format: </span><span style="color:#E6DB74;">&#39;es&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 输出格式: es, cjs, umd, iife</span></span>
<span class="line"><span style="color:#F8F8F2;">    name: </span><span style="color:#E6DB74;">&#39;MyLib&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#88846F;">// UMD/IIFE 格式必填</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 插件配置</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins: [</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(), </span><span style="color:#88846F;">// 解析第三方依赖</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">commonjs</span><span style="color:#F8F8F2;">(), </span><span style="color:#88846F;">// 将 CommonJS 转换为 ES Module</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">typescript</span><span style="color:#F8F8F2;">() </span><span style="color:#88846F;">// 支持 TypeScript</span></span>
<span class="line"><span style="color:#F8F8F2;">  ]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><button class="link">将此代码在线运行</button></div><h2 id="常用配置选项" tabindex="-1">常用配置选项 <a class="header-anchor" href="#常用配置选项" aria-label="Permalink to &quot;常用配置选项&quot;">​</a></h2><h3 id="_1-多入口打包" tabindex="-1">1. 多入口打包 <a class="header-anchor" href="#_1-多入口打包" aria-label="Permalink to &quot;1. 多入口打包&quot;">​</a></h3><div class="language-javascript codearea-link" id="49gyqqgqbym"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  input: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    main: </span><span style="color:#E6DB74;">&#39;src/main.js&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    vendor: </span><span style="color:#E6DB74;">&#39;src/vendor.js&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  output: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    dir: </span><span style="color:#E6DB74;">&#39;dist&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    format: </span><span style="color:#E6DB74;">&#39;es&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    entryFileNames: </span><span style="color:#E6DB74;">&#39;[name].js&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><button class="link">将此代码在线运行</button></div><h3 id="_2-外部依赖声明" tabindex="-1">2. 外部依赖声明 <a class="header-anchor" href="#_2-外部依赖声明" aria-label="Permalink to &quot;2. 外部依赖声明&quot;">​</a></h3><div class="language-javascript codearea-link" id="faerrxilqc5"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  input: </span><span style="color:#E6DB74;">&#39;src/index.js&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  external: [</span><span style="color:#E6DB74;">&#39;lodash&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;react&#39;</span><span style="color:#F8F8F2;">], </span><span style="color:#88846F;">// 声明外部依赖</span></span>
<span class="line"><span style="color:#F8F8F2;">  output: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    file: </span><span style="color:#E6DB74;">&#39;dist/bundle.js&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    format: </span><span style="color:#E6DB74;">&#39;es&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    globals: {</span></span>
<span class="line"><span style="color:#F8F8F2;">      lodash: </span><span style="color:#E6DB74;">&#39;_&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      react: </span><span style="color:#E6DB74;">&#39;React&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><button class="link">将此代码在线运行</button></div><h3 id="_3-生产环境优化" tabindex="-1">3. 生产环境优化 <a class="header-anchor" href="#_3-生产环境优化" aria-label="Permalink to &quot;3. 生产环境优化&quot;">​</a></h3><div class="language-javascript:rollup.config.js"><button title="Copy Code" class="copy"></button><span class="lang">javascript:rollup.config.js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">import terser from &#39;@rollup/plugin-terser&#39;;</span></span>
<span class="line"><span style="color:#F8F8F2;"></span></span>
<span class="line"><span style="color:#F8F8F2;">export default {</span></span>
<span class="line"><span style="color:#F8F8F2;">  input: &#39;src/index.js&#39;,</span></span>
<span class="line"><span style="color:#F8F8F2;">  output: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    file: &#39;dist/bundle.min.js&#39;,</span></span>
<span class="line"><span style="color:#F8F8F2;">    format: &#39;umd&#39;,</span></span>
<span class="line"><span style="color:#F8F8F2;">    name: &#39;MyLib&#39;,</span></span>
<span class="line"><span style="color:#F8F8F2;">    plugins: [terser()] // 压缩代码</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><h2 id="常用插件" tabindex="-1">常用插件 <a class="header-anchor" href="#常用插件" aria-label="Permalink to &quot;常用插件&quot;">​</a></h2><ol><li><strong>@rollup/plugin-node-resolve</strong>: 解析 node_modules 中的模块</li><li><strong>@rollup/plugin-commonjs</strong>: 将 CommonJS 模块转换为 ES6</li><li><strong>@rollup/plugin-typescript</strong>: TypeScript 支持</li><li><strong>@rollup/plugin-babel</strong>: Babel 转换支持</li><li><strong>@rollup/plugin-terser</strong>: 代码压缩</li><li><strong>@rollup/plugin-json</strong>: 导入 JSON 文件</li><li><strong>rollup-plugin-postcss</strong>: 处理 CSS 文件</li></ol><h2 id="命令行使用" tabindex="-1">命令行使用 <a class="header-anchor" href="#命令行使用" aria-label="Permalink to &quot;命令行使用&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;"># 开发模式构建</span></span>
<span class="line"><span style="color:#A6E22E;">rollup</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">-c</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">-w</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 生产模式构建</span></span>
<span class="line"><span style="color:#A6E22E;">rollup</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">-c</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">--environment</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">NODE_ENV:production</span></span></code></pre></div><h2 id="与其他打包工具的对比" tabindex="-1">与其他打包工具的对比 <a class="header-anchor" href="#与其他打包工具的对比" aria-label="Permalink to &quot;与其他打包工具的对比&quot;">​</a></h2><h3 id="rollup-vs-webpack" tabindex="-1">Rollup vs Webpack <a class="header-anchor" href="#rollup-vs-webpack" aria-label="Permalink to &quot;Rollup vs Webpack&quot;">​</a></h3><ul><li>Rollup 更适合打包库和组件</li><li>Webpack 更适合打包应用</li><li>Rollup 打包结果更清晰简洁</li><li>Webpack 功能更全面,生态更丰富</li></ul><h3 id="rollup-vs-vite" tabindex="-1">Rollup vs Vite <a class="header-anchor" href="#rollup-vs-vite" aria-label="Permalink to &quot;Rollup vs Vite&quot;">​</a></h3><ul><li>Vite 在开发环境使用 ESM</li><li>Vite 生产环境使用 Rollup</li><li>Vite 更适合应用开发</li><li>Rollup 更适合库开发</li></ul><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><ol><li><strong>合理使用外部依赖</strong></li></ol><div class="language-javascript codearea-link" id="idcn3q4spr"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">external: Object.</span><span style="color:#A6E22E;">keys</span><span style="color:#F8F8F2;">(pkg.dependencies)</span></span></code></pre><button class="link">将此代码在线运行</button></div><ol start="2"><li><strong>配置文件拆分</strong></li></ol><div class="language-javascript codearea-link" id="47nuohc8lyc"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// rollup.config.dev.js</span></span>
<span class="line"><span style="color:#88846F;">// rollup.config.prod.js</span></span></code></pre><button class="link">将此代码在线运行</button></div><ol start="3"><li><strong>使用环境变量</strong></li></ol><div class="language-javascript codearea-link" id="wu7w6chkhx"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> isProd </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> p<wbr>rocess.env.NODE_ENV </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;production&#39;</span></span></code></pre><button class="link">将此代码在线运行</button></div><ol start="4"><li><strong>合理使用代码分割</strong></li></ol><div class="language-javascript codearea-link" id="v3akc2olu3b"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">output: {</span></span>
<span class="line"><span style="color:#F8F8F2;">  dir: </span><span style="color:#E6DB74;">&#39;dist&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  format: </span><span style="color:#E6DB74;">&#39;es&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  manualChunks: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    vendor: [</span><span style="color:#E6DB74;">&#39;lodash&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;moment&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><button class="link">将此代码在线运行</button></div><h2 id="什么是-iife" tabindex="-1"><a href="./IIFE.html">什么是 IIFE</a> <a class="header-anchor" href="#什么是-iife" aria-label="Permalink to &quot;[什么是 IIFE](./IIFE.md)&quot;">​</a></h2>`,35)]))}const d=l(p,[["render",e]]);export{y as __pageData,d as default};
