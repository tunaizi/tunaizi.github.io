import{_ as l,r as n,i as a,a as o}from"./chunks/framework.bb8f9838.js";const u=JSON.parse('{"title":"Python 数据类型","description":"","frontmatter":{},"headers":[{"level":2,"title":"基本数据类型","slug":"基本数据类型","link":"#基本数据类型","children":[{"level":3,"title":"1. 数字（Numbers）","slug":"_1-数字-numbers","link":"#_1-数字-numbers","children":[]},{"level":3,"title":"2. 布尔值（Boolean）","slug":"_2-布尔值-boolean","link":"#_2-布尔值-boolean","children":[]},{"level":3,"title":"3. 字符串（String）","slug":"_3-字符串-string","link":"#_3-字符串-string","children":[]},{"level":3,"title":"4. 字节（Bytes）","slug":"_4-字节-bytes","link":"#_4-字节-bytes","children":[]},{"level":3,"title":"5. 字节数组（Bytearray）","slug":"_5-字节数组-bytearray","link":"#_5-字节数组-bytearray","children":[]},{"level":3,"title":"6. NoneType","slug":"_6-nonetype","link":"#_6-nonetype","children":[]}]},{"level":2,"title":"复合数据类型","slug":"复合数据类型","link":"#复合数据类型","children":[{"level":3,"title":"1. 列表（List）","slug":"_1-列表-list","link":"#_1-列表-list","children":[]},{"level":3,"title":"2. 元组（Tuple）","slug":"_2-元组-tuple","link":"#_2-元组-tuple","children":[]},{"level":3,"title":"3. 集合（Set）","slug":"_3-集合-set","link":"#_3-集合-set","children":[]},{"level":3,"title":"4. 冻结集合（Frozenset）","slug":"_4-冻结集合-frozenset","link":"#_4-冻结集合-frozenset","children":[]},{"level":3,"title":"5. 字典（Dictionary）","slug":"_5-字典-dictionary","link":"#_5-字典-dictionary","children":[]}]},{"level":2,"title":"其他数据类型","slug":"其他数据类型","link":"#其他数据类型","children":[{"level":3,"title":"1. 范围（Range）","slug":"_1-范围-range","link":"#_1-范围-range","children":[]},{"level":3,"title":"2. 布尔值（Boolean）","slug":"_2-布尔值-boolean-1","link":"#_2-布尔值-boolean-1","children":[]}]},{"level":2,"title":"示例代码","slug":"示例代码","link":"#示例代码","children":[]}],"relativePath":"start-docs/H-python/数据类型.md","filePath":"start-docs/H-python/数据类型.md"}'),e={name:"start-docs/H-python/数据类型.md"};function p(t,s,r,c,F,i){return n(),a("div",null,s[0]||(s[0]=[o(`<h1 id="python-数据类型" tabindex="-1">Python 数据类型 <a class="header-anchor" href="#python-数据类型" aria-label="Permalink to &quot;Python 数据类型&quot;">​</a></h1><p>Python 提供了多种内置数据类型，这些数据类型可以用来存储和操作不同类型的数据。以下是 Python 的主要数据类型及其特点和用法。</p><h2 id="基本数据类型" tabindex="-1">基本数据类型 <a class="header-anchor" href="#基本数据类型" aria-label="Permalink to &quot;基本数据类型&quot;">​</a></h2><h3 id="_1-数字-numbers" tabindex="-1">1. 数字（Numbers） <a class="header-anchor" href="#_1-数字-numbers" aria-label="Permalink to &quot;1. 数字（Numbers）&quot;">​</a></h3><p>Python 支持多种数字类型，包括整数、浮点数和复数。</p><ul><li><p><strong>整数（int）</strong>：</p><ul><li>描述：用于表示整数值。</li><li>示例：<code>0</code>, <code>100</code>, <code>-200</code></li></ul></li><li><p><strong>浮点数（float）</strong>：</p><ul><li>描述：用于表示小数值。</li><li>示例：<code>0.0</code>, <code>3.14</code>, <code>-0.001</code></li></ul></li><li><p><strong>复数（complex）</strong>：</p><ul><li>描述：用于表示复数，形式为 <code>a + bj</code>，其中 <code>a</code> 和 <code>b</code> 是浮点数，<code>j</code> 是虚数单位。</li><li>示例：<code>3 + 4j</code>, <code>-1.5 + 2.5j</code></li></ul></li></ul><h3 id="_2-布尔值-boolean" tabindex="-1">2. 布尔值（Boolean） <a class="header-anchor" href="#_2-布尔值-boolean" aria-label="Permalink to &quot;2. 布尔值（Boolean）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于表示真（True）或假（False）。</li><li><strong>示例</strong>：<code>True</code>, <code>False</code></li></ul><h3 id="_3-字符串-string" tabindex="-1">3. 字符串（String） <a class="header-anchor" href="#_3-字符串-string" aria-label="Permalink to &quot;3. 字符串（String）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于表示文本数据。</li><li><strong>示例</strong>：<code>&quot;Hello, World!&quot;</code>, <code>&#39;Python&#39;</code></li><li><strong>特性</strong>： <ul><li>字符串是不可变的（immutable）。</li><li>支持多种操作，如拼接、切片、查找等。</li></ul></li></ul><h3 id="_4-字节-bytes" tabindex="-1">4. 字节（Bytes） <a class="header-anchor" href="#_4-字节-bytes" aria-label="Permalink to &quot;4. 字节（Bytes）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于表示字节序列。</li><li><strong>示例</strong>：<code>b&#39;hello&#39;</code></li><li><strong>特性</strong>： <ul><li>字节是不可变的（immutable）。</li><li>常用于处理二进制数据。</li></ul></li></ul><h3 id="_5-字节数组-bytearray" tabindex="-1">5. 字节数组（Bytearray） <a class="header-anchor" href="#_5-字节数组-bytearray" aria-label="Permalink to &quot;5. 字节数组（Bytearray）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于表示可变的字节序列。</li><li><strong>示例</strong>：<code>bytearray(b&#39;hello&#39;)</code></li><li><strong>特性</strong>： <ul><li>字节数组是可变的（mutable）。</li><li>常用于处理二进制数据。</li></ul></li></ul><h3 id="_6-nonetype" tabindex="-1">6. NoneType <a class="header-anchor" href="#_6-nonetype" aria-label="Permalink to &quot;6. NoneType&quot;">​</a></h3><ul><li><strong>描述</strong>：用于表示空值或缺失值。</li><li><strong>示例</strong>：<code>None</code></li></ul><h2 id="复合数据类型" tabindex="-1">复合数据类型 <a class="header-anchor" href="#复合数据类型" aria-label="Permalink to &quot;复合数据类型&quot;">​</a></h2><h3 id="_1-列表-list" tabindex="-1">1. 列表（List） <a class="header-anchor" href="#_1-列表-list" aria-label="Permalink to &quot;1. 列表（List）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于存储有序的、可变的元素集合。</li><li><strong>示例</strong>：<code>[1, 2, 3]</code>, <code>[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</code></li><li><strong>特性</strong>： <ul><li>列表是可变的（mutable）。</li><li>支持多种操作，如添加、删除、排序等。</li></ul></li></ul><h3 id="_2-元组-tuple" tabindex="-1">2. 元组（Tuple） <a class="header-anchor" href="#_2-元组-tuple" aria-label="Permalink to &quot;2. 元组（Tuple）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于存储有序的、不可变的元素集合。</li><li><strong>示例</strong>：<code>(1, 2, 3)</code>, <code>(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;)</code></li><li><strong>特性</strong>： <ul><li>元组是不可变的（immutable）。</li><li>通常用于存储固定的数据集。</li></ul></li></ul><h3 id="_3-集合-set" tabindex="-1">3. 集合（Set） <a class="header-anchor" href="#_3-集合-set" aria-label="Permalink to &quot;3. 集合（Set）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于存储无序的、唯一的元素集合。</li><li><strong>示例</strong>：<code>{1, 2, 3}</code>, <code>{&#39;a&#39;, &#39;b&#39;, &#39;c&#39;}</code></li><li><strong>特性</strong>： <ul><li>集合是可变的（mutable）。</li><li>支持集合操作，如并集、交集、差集等。</li></ul></li></ul><h3 id="_4-冻结集合-frozenset" tabindex="-1">4. 冻结集合（Frozenset） <a class="header-anchor" href="#_4-冻结集合-frozenset" aria-label="Permalink to &quot;4. 冻结集合（Frozenset）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于存储无序的、唯一的元素集合，且是不可变的。</li><li><strong>示例</strong>：<code>frozenset({1, 2, 3})</code>, <code>frozenset({&#39;a&#39;, &#39;b&#39;, &#39;c&#39;})</code></li><li><strong>特性</strong>： <ul><li>冻结集合是不可变的（immutable）。</li><li>常用于需要不可变集合的场景。</li></ul></li></ul><h3 id="_5-字典-dictionary" tabindex="-1">5. 字典（Dictionary） <a class="header-anchor" href="#_5-字典-dictionary" aria-label="Permalink to &quot;5. 字典（Dictionary）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于存储键值对（key-value pairs）的集合。</li><li><strong>示例</strong>：<code>{&#39;name&#39;: &#39;Alice&#39;, &#39;age&#39;: 25}</code></li><li><strong>特性</strong>： <ul><li>字典是可变的（mutable）。</li><li>键是唯一的，值可以重复。</li><li>支持多种操作，如添加、删除、查找等。</li></ul></li></ul><h2 id="其他数据类型" tabindex="-1">其他数据类型 <a class="header-anchor" href="#其他数据类型" aria-label="Permalink to &quot;其他数据类型&quot;">​</a></h2><h3 id="_1-范围-range" tabindex="-1">1. 范围（Range） <a class="header-anchor" href="#_1-范围-range" aria-label="Permalink to &quot;1. 范围（Range）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于生成一个整数序列。</li><li><strong>示例</strong>：<code>range(5)</code> 生成 <code>0, 1, 2, 3, 4</code></li><li><strong>特性</strong>： <ul><li>范围是不可变的（immutable）。</li><li>常用于循环中。</li></ul></li></ul><h3 id="_2-布尔值-boolean-1" tabindex="-1">2. 布尔值（Boolean） <a class="header-anchor" href="#_2-布尔值-boolean-1" aria-label="Permalink to &quot;2. 布尔值（Boolean）&quot;">​</a></h3><ul><li><strong>描述</strong>：用于表示真（True）或假（False）。</li><li><strong>示例</strong>：<code>True</code>, <code>False</code></li><li><strong>特性</strong>： <ul><li>布尔值是不可变的（immutable）。</li><li>常用于条件判断。</li></ul></li></ul><h2 id="示例代码" tabindex="-1">示例代码 <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码&quot;">​</a></h2><p>以下是一个示例代码，展示了各种数据类型的使用：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;"># 整数</span></span>
<span class="line"><span style="color:#F8F8F2;">int_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">10</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;整数: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">int_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 浮点数</span></span>
<span class="line"><span style="color:#F8F8F2;">float_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">3.14</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;浮点数: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">float_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 复数</span></span>
<span class="line"><span style="color:#F8F8F2;">complex_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">4</span><span style="color:#66D9EF;font-style:italic;">j</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;复数: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">complex_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 布尔值</span></span>
<span class="line"><span style="color:#F8F8F2;">bool_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">True</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;布尔值: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">bool_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 字符串</span></span>
<span class="line"><span style="color:#F8F8F2;">string_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;Hello, World!&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;字符串: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">string_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 字节</span></span>
<span class="line"><span style="color:#F8F8F2;">bytes_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">b</span><span style="color:#E6DB74;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;字节: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">bytes_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 字节数组</span></span>
<span class="line"><span style="color:#F8F8F2;">bytearray_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">bytearray</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">b</span><span style="color:#E6DB74;">&#39;hello&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;字节数组: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">bytearray_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># NoneType</span></span>
<span class="line"><span style="color:#F8F8F2;">none_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">None</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;NoneType: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">none_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 列表</span></span>
<span class="line"><span style="color:#F8F8F2;">list_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;列表: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">list_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 元组</span></span>
<span class="line"><span style="color:#F8F8F2;">tuple_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;元组: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">tuple_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 集合</span></span>
<span class="line"><span style="color:#F8F8F2;">set_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;集合: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">set_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 冻结集合</span></span>
<span class="line"><span style="color:#F8F8F2;">frozenset_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">frozenset</span><span style="color:#F8F8F2;">({</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;冻结集合: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">frozenset_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 字典</span></span>
<span class="line"><span style="color:#F8F8F2;">dict_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Alice&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">25</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;字典: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">dict_example</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 范围</span></span>
<span class="line"><span style="color:#F8F8F2;">range_example </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;">range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;范围: </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(range_example)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><button class="link"></button></div>`,35)]))}const d=l(e,[["render",p]]);export{u as __pageData,d as default};
