import { _ as _export_sfc, b as r3, c as it, S as ig } from "./chunks/framework.6235ba6c.js";
const __pageData = JSON.parse('{"title":"gulp","description":"","frontmatter":{},"headers":[{"level":2,"title":"全局安装gulp模块","slug":"全局安装gulp模块","link":"#全局安装gulp模块","children":[]},{"level":2,"title":"命令行进入到项目","slug":"命令行进入到项目","link":"#命令行进入到项目","children":[]},{"level":2,"title":"初始化项目","slug":"初始化项目","link":"#初始化项目","children":[]},{"level":2,"title":"局部安装gulp","slug":"局部安装gulp","link":"#局部安装gulp","children":[]},{"level":2,"title":"建立任务","slug":"建立任务","link":"#建立任务","children":[]},{"level":2,"title":"执行任务","slug":"执行任务","link":"#执行任务","children":[]},{"level":2,"title":"sass预处理器","slug":"sass预处理器","link":"#sass预处理器","children":[{"level":3,"title":"浏览器前缀","slug":"浏览器前缀","link":"#浏览器前缀","children":[]}]},{"level":2,"title":"压缩","slug":"压缩","link":"#压缩","children":[]},{"level":2,"title":"es6转es5","slug":"es6转es5","link":"#es6转es5","children":[]},{"level":2,"title":"合并","slug":"合并","link":"#合并","children":[]},{"level":2,"title":"压缩","slug":"压缩-1","link":"#压缩-1","children":[]},{"level":2,"title":"压缩html","slug":"压缩html","link":"#压缩html","children":[{"level":3,"title":"img处理","slug":"img处理","link":"#img处理","children":[]}]},{"level":2,"title":"gulp 3 写法","slug":"gulp-3-写法","link":"#gulp-3-写法","children":[]},{"level":2,"title":"gulp 4+ 写法(主流)","slug":"gulp-4-写法-主流","link":"#gulp-4-写法-主流","children":[]}],"relativePath":"start-docs/E-md/gulp.md","filePath":"start-docs/E-md/gulp.md"}');
const _sfc_main = { name: "start-docs/E-md/gulp.md" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return r3(), it("div", null, _cache[0] || (_cache[0] = [
    ig('<h1 id="gulp" tabindex="-1">gulp <a class="header-anchor" href="#gulp" aria-label="Permalink to &quot;gulp&quot;">​</a></h1><p>gulp 是基于 node 实现 Web 前端自动化开发的工具，利用它能够极大的提高开发效率。 在 Web 前端开发工作中有很多“重复工作”，比如压缩CSS/JS/html文件。而这些工作都是有规律的。找到这些规律，并编写 gulp 配置代码,让 gulp 自动执行这些“重复工作”。</p><p>目前开发项目比较主流的做法是，使用gulp或webpack这种前端工程化工具来管理我们的项目。</p><p>具体指将项目分为两个环境，分别是开发环境和生产环境，我们只关注开发环境。</p><blockquote><p>我们在开发环境中编写代码，利用gulp自动对开发环境中的文件代码进行整合，将整合后的代码保存到生产环境下，而这个生产环境，就是最终挂到服务器的线上网站。</p></blockquote><blockquote><p>使用gulp时，需要用npm下载相应的模块，所以需要安装nodejs环境。</p></blockquote><h1 id="环境搭建" tabindex="-1">环境搭建 <a class="header-anchor" href="#环境搭建" aria-label="Permalink to &quot;环境搭建&quot;">​</a></h1><h2 id="全局安装gulp模块" tabindex="-1">全局安装gulp模块 <a class="header-anchor" href="#全局安装gulp模块" aria-label="Permalink to &quot;全局安装gulp模块&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai"><code><span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">gulp</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">--global</span><span style="color:#F8F8F2;">     </span><span style="color:#E6DB74;">//全局安装表示在当前电脑中可以使用gulp环境了</span></span></code></pre></div><blockquote><p>npm i gulp -g 等同于 npm install gulp --global</p></blockquote><blockquote><p>npm uninstall gulp --global 表示删除全局gulp，uninstall的简写为uni，--global的简写为-g</p></blockquote><h2 id="命令行进入到项目" tabindex="-1">命令行进入到项目 <a class="header-anchor" href="#命令行进入到项目" aria-label="Permalink to &quot;命令行进入到项目&quot;">​</a></h2><p>进入到某个文件夹，把这个文件夹看作项目的根目录。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">project1</span></span></code></pre></div><h2 id="初始化项目" tabindex="-1">初始化项目 <a class="header-anchor" href="#初始化项目" aria-label="Permalink to &quot;初始化项目&quot;">​</a></h2><p>然后初始化项目，生成package.json文件，这个文件描述项目信息和相关依赖。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai"><code><span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">init</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6E22E;">在路径</span><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">下会形成这样的一个.json文件（部分内容为后添加的）</span></span>\n<span class="line"><span style="color:#F8F8F2;">{</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;name&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;gulptest&quot;,//项目名称（必须）</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;version&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;0.0.1&quot;,//项目版本（必须）</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;description&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;这是一个gulp的测试程序&quot;,//项目描述（必须）</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;homepage&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;&quot;,  </span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">//项目主页</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;main&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;index.js&quot;,//入口文件</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;scripts&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">{</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">&quot;test&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;echo </span><span style="color:#AE81FF;">\\&quot;</span><span style="color:#E6DB74;">Error: no test specified</span><span style="color:#AE81FF;">\\&quot;</span><span style="color:#E6DB74;"> &amp;&amp; exit 1&quot;</span></span>\n<span class="line"><span style="color:#F8F8F2;">  },</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;keywords&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> [//关键词</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">&quot;gulp&quot;</span></span>\n<span class="line"><span style="color:#F8F8F2;">  ],</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;author&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;wuxunxun007&quot;,//作者</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;license&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;ISC&quot;//项目许可协议</span></span>\n<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">&quot;devDependencies&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">{    //项目依赖的插件</span></span>\n<span class="line"><span style="color:#A6E22E;">    </span><span style="color:#A6E22E;">&quot;gulp&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;^3.8.11&quot;,</span></span>\n<span class="line"><span style="color:#A6E22E;">    </span><span style="color:#A6E22E;">&quot;gulp-less&quot;</span><span style="color:#66D9EF;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;^3.0.0&quot;</span></span>\n<span class="line"><span style="color:#A6E22E;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><blockquote><p>npm init -y 以默认值创建package.json</p></blockquote><h2 id="局部安装gulp" tabindex="-1">局部安装gulp <a class="header-anchor" href="#局部安装gulp" aria-label="Permalink to &quot;局部安装gulp&quot;">​</a></h2><p>在项目目录中，局部安装gulp模块，将gulp模块描述为开发环境依赖。(局部安装表示在当前项目要使用的gulp)</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai"><code><span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">gulp</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">--save-dev</span></span></code></pre></div><p>依赖分两种：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">dependencies:</span><span style="color:#F8F8F2;">{}</span><span style="color:#A6E22E;">,</span><span style="color:#F8F8F2;">        </span><span style="color:#88846F;"># --save        生产环境    简写 -S</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">devDependencies:</span><span style="color:#F8F8F2;">{}      </span><span style="color:#88846F;"># --save-dev	开发环境    简写 -D</span></span>\n<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><p>在根目录创建2个文件夹，src表示开发环境，dist表示生产环境。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">project1/</span></span>\n<span class="line"><span style="color:#F8F8F2;">    src/            # 开发环境</span></span>\n<span class="line"><span style="color:#F8F8F2;">    dist/           # 生产环境</span></span></code></pre></div><blockquote><p>我们在 src 目录下编写代码，比如在src下面建立js、css..文件夹，里面建立相关的文件，编写相关的代码。</p></blockquote><h1 id="gulp-任务" tabindex="-1">gulp 任务 <a class="header-anchor" href="#gulp-任务" aria-label="Permalink to &quot;gulp 任务&quot;">​</a></h1><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">gulp的常见方法</span></span>\n<span class="line"><span style="color:#F8F8F2;">    task: [Function: bound task],</span></span>\n<span class="line"><span style="color:#F8F8F2;">    watch: [Function: bound ],</span></span>\n<span class="line"><span style="color:#F8F8F2;">    src: [Function: bound src],               //要操作的文件路径  src() 接受 glob 参数(可以查找符合特定规则的文件路径名)，并从文件系统中读取文件然后生成一个 Node 流（stream）。它将所有匹配的文件读取到内存中并通过流（stream）进行处理。</span></span>\n<span class="line"><span style="color:#F8F8F2;">    pipe:[function:bound pipe],</span></span>\n<span class="line"><span style="color:#F8F8F2;">    dest: [Function: bound dest],</span></span>\n<span class="line"><span style="color:#F8F8F2;">    series: [Function: bound series],       调用已创建的任务(串联执行   一个任务接着一个执行  同步执行)</span></span>\n<span class="line"><span style="color:#F8F8F2;">    parallel: [Function: bound parallel],   调用已创建的任务(并联执行   多个任务同时执行  异步执行)  </span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span></span>\n<span class="line"><span style="color:#F8F8F2;">注:</span></span>\n<span class="line"><span style="color:#F8F8F2;"> 	src() 接受 glob 参数(可以查找符合特定规则的文件路径名)，并从文件系统中读取文件然后生成一个 Node 流（stream）。它将所有匹配的文件读取到内存中并通过流（stream）进行处理。</span></span>\n<span class="line"><span style="color:#F8F8F2;">    流（stream）所提供的主要的 API 是 .pipe() 方法，用于连接转换流（Transform streams）或可写流（Writable streams）</span></span>\n<span class="line"><span style="color:#F8F8F2;">    dest() 接受一个输出目录作为参数，并且它还会产生一个 Node 流（stream），通常作为终止流（terminator stream）。当它接收到通过管道（pipeline）传输的文件时，它会将文件内容及文件属性写入到指定的目录中。</span></span></code></pre></div><h2 id="建立任务" tabindex="-1">建立任务 <a class="header-anchor" href="#建立任务" aria-label="Permalink to &quot;建立任务&quot;">​</a></h2><p>在项目根目录下建立 gulpfile.js 文件，必须是这个名字，这个文件指gulp任务文件。</p><div class="language-javascript codearea-link" id="gv4q5pt8xgb"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// 引入gulp模块</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> gulp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;gulp&quot;</span><span style="color:#F8F8F2;">); </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88846F;">// 建立gulp任务</span></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;task1&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(){</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> gulp.</span><span style="color:#A6E22E;">src</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;src/js/*.js&quot;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(gulp.</span><span style="color:#A6E22E;">dest</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;dist/js/&quot;</span><span style="color:#F8F8F2;">)); </span></span>\n<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><button class="link">将此代码在线运行</button></div><p><strong>src</strong> 源，<strong>dest</strong> 目标，<strong>pipe</strong> 管道。 合在一起指：把源中文件通过管道复制到目标文件夹中。</p><blockquote><p>return 描述的是异步任务执行完毕了</p></blockquote><h2 id="执行任务" tabindex="-1">执行任务 <a class="header-anchor" href="#执行任务" aria-label="Permalink to &quot;执行任务&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai"><code><span class="line"><span style="color:#A6E22E;">gulp</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">task1</span></span></code></pre></div><h1 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h1><h2 id="sass预处理器" tabindex="-1">sass预处理器 <a class="header-anchor" href="#sass预处理器" aria-label="Permalink to &quot;sass预处理器&quot;">​</a></h2><div class="language-javascript codearea-link" id="g2w4agw4e0f"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// cnpm install --save-dev gulp-sass</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> sass </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp-sass&#39;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 编译scss</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> concat </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp-concat&#39;</span><span style="color:#F8F8F2;">);  </span><span style="color:#88846F;">// 合并</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> rename </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp-rename&#39;</span><span style="color:#F8F8F2;">);  </span><span style="color:#88846F;">// 重命名</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;task2&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(){</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> gulp.</span><span style="color:#A6E22E;">src</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;src/css/1.scss&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;src/css/2.scss&#39;</span><span style="color:#F8F8F2;">]) </span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">concat</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;bk.css&quot;</span><span style="color:#F8F8F2;">))     </span><span style="color:#88846F;">// 合并</span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">sass</span><span style="color:#F8F8F2;">())               </span><span style="color:#88846F;">// 编译</span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(gulp.</span><span style="color:#A6E22E;">dest</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dist/css&#39;</span><span style="color:#F8F8F2;">)); </span></span>\n<span class="line"><span style="color:#F8F8F2;">})</span></span></code></pre><button class="link">将此代码在线运行</button></div><p>如果 gulp-sass 无法下载，那么使用 gulp-sass-china</p><div class="language-javascript codearea-link" id="s5ol38aimsb"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">//cnpm i -D gulp-sass-china</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> sass </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp-sass-china&#39;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;task2&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(){</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> gulp.</span><span style="color:#A6E22E;">src</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;src/css/1.scss&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;src/css/2.scss&#39;</span><span style="color:#F8F8F2;">]) </span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">concat</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;bk.css&quot;</span><span style="color:#F8F8F2;">)) </span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">sass</span><span style="color:#F8F8F2;">())</span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(gulp.</span><span style="color:#A6E22E;">dest</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dist/css&#39;</span><span style="color:#F8F8F2;">)); </span></span>\n<span class="line"><span style="color:#F8F8F2;">})</span></span></code></pre><button class="link">将此代码在线运行</button></div><h3 id="浏览器前缀" tabindex="-1">浏览器前缀 <a class="header-anchor" href="#浏览器前缀" aria-label="Permalink to &quot;浏览器前缀&quot;">​</a></h3><p>gulp教程之gulp-autoprefixer（根据设置浏览器版本自动处理浏览器前缀）</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">var gulp = require(&#39;gulp&#39;),</span></span>\n<span class="line"><span style="color:#F8F8F2;">var autoprefixer = require(&#39;gulp-autoprefixer&#39;)</span></span>\n<span class="line"><span style="color:#F8F8F2;">    const sourcemaps = require(&#39;gulp-sourcemaps&#39;)</span></span>\n<span class="line"><span style="color:#F8F8F2;">    // const postcss = require(&#39;gulp-postcss&#39;)</span></span>\n<span class="line"><span style="color:#F8F8F2;"> </span></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.task(&#39;testAutoFx&#39;, function () {</span></span>\n<span class="line"><span style="color:#F8F8F2;">    gulp.src(&#39;src/css/index.css&#39;)</span></span>\n<span class="line"><span style="color:#F8F8F2;">    	.pipe(sourcemaps.init())</span></span>\n<span class="line"><span style="color:#F8F8F2;">        .pipe(autoprefixer({</span></span>\n<span class="line"><span style="color:#F8F8F2;">        	cascade: false, //是否美化属性值 默认：true 像这样：</span></span>\n<span class="line"><span style="color:#F8F8F2;">         	//-webkit-transform: rotate(45deg);</span></span>\n<span class="line"><span style="color:#F8F8F2;">            //        transform: rotate(45deg);</span></span>\n<span class="line"><span style="color:#F8F8F2;">        }))</span></span>\n<span class="line"><span style="color:#F8F8F2;">        .pipe(sourcemaps.write(&#39;.&#39;))</span></span>\n<span class="line"><span style="color:#F8F8F2;">        .pipe(gulp.dest(&#39;dist/css&#39;));</span></span>\n<span class="line"><span style="color:#F8F8F2;">});</span></span>\n<span class="line"><span style="color:#F8F8F2;">pagkage.json配置</span></span>\n<span class="line"><span style="color:#F8F8F2;"> &quot;browserslist&quot;: [</span></span>\n<span class="line"><span style="color:#F8F8F2;">    &quot;last 2 versions&quot;,</span></span>\n<span class="line"><span style="color:#F8F8F2;">    &quot;last 1 Chrome versions&quot;,</span></span>\n<span class="line"><span style="color:#F8F8F2;">    &quot;last 3 Safari versions&quot;,</span></span>\n<span class="line"><span style="color:#F8F8F2;">    &quot;Firefox &gt;= 20&quot;</span></span>\n<span class="line"><span style="color:#F8F8F2;">  ]</span></span>\n<span class="line"><span style="color:#F8F8F2;"></span></span>\n<span class="line"><span style="color:#F8F8F2;">3.2、gulp-autoprefixer的browsers参数详解 （传送门）：</span></span>\n<span class="line"><span style="color:#F8F8F2;"></span></span>\n<span class="line"><span style="color:#F8F8F2;">● last 2 versions: 主流浏览器的最新两个版本</span></span>\n<span class="line"><span style="color:#F8F8F2;"></span></span>\n<span class="line"><span style="color:#F8F8F2;">● last 1 Chrome versions: 谷歌浏览器的最新版本</span></span>\n<span class="line"><span style="color:#F8F8F2;"></span></span>\n<span class="line"><span style="color:#F8F8F2;">● last 2 Explorer versions: IE的最新两个版本</span></span>\n<span class="line"><span style="color:#F8F8F2;"></span></span>\n<span class="line"><span style="color:#F8F8F2;">● last 3 Safari versions: 苹果浏览器最新三个版本</span></span>\n<span class="line"><span style="color:#F8F8F2;"></span></span>\n<span class="line"><span style="color:#F8F8F2;">● Firefox &gt;= 20: 火狐浏览器的版本大于或等于20</span></span>\n<span class="line"><span style="color:#F8F8F2;"></span></span>\n<span class="line"><span style="color:#F8F8F2;">● iOS 7: IOS7版本</span></span>\n<span class="line"><span style="color:#F8F8F2;"></span></span>\n<span class="line"><span style="color:#F8F8F2;">● Firefox ESR: 最新ESR版本的火狐</span></span>\n<span class="line"><span style="color:#F8F8F2;"></span></span>\n<span class="line"><span style="color:#F8F8F2;">● &gt; 5%: 全球统计有超过5%的使用率</span></span></code></pre></div><h2 id="压缩" tabindex="-1">压缩 <a class="header-anchor" href="#压缩" aria-label="Permalink to &quot;压缩&quot;">​</a></h2><div class="language-javascript codearea-link" id="j08070web7"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// cnpm install --save-dev gulp-minify-css</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> minifyCSS </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp-minify-css&#39;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// 用于压缩 CSS </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;task2&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(){</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> gulp.</span><span style="color:#A6E22E;">src</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;src/css/1.scss&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;src/css/2.scss&#39;</span><span style="color:#F8F8F2;">]) </span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">concat</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;bk.css&quot;</span><span style="color:#F8F8F2;">)) </span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">sass</span><span style="color:#F8F8F2;">({</span></span>\n<span class="line"><span style="color:#F8F8F2;">            outputStyle: </span><span style="color:#E6DB74;">&quot;expanded&quot;</span><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// nested expanded compact  compressed</span></span>\n<span class="line"><span style="color:#F8F8F2;">        })) </span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">minifyCSS</span><span style="color:#F8F8F2;">())</span></span>\n<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(gulp.</span><span style="color:#A6E22E;">dest</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dist/css&#39;</span><span style="color:#F8F8F2;">)); </span></span>\n<span class="line"><span style="color:#F8F8F2;">})</span></span></code></pre><button class="link">将此代码在线运行</button></div><h1 id="js" tabindex="-1">js <a class="header-anchor" href="#js" aria-label="Permalink to &quot;js&quot;">​</a></h1><h2 id="es6转es5" tabindex="-1">es6转es5 <a class="header-anchor" href="#es6转es5" aria-label="Permalink to &quot;es6转es5&quot;">​</a></h2><p><strong>安装gulp-babel</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;"># Babel 6</span></span>\n<span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">--save-dev</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">gulp-babel</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88846F;"># Babel 7</span></span>\n<span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">--save-dev</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">gulp-babel@next</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">@babel/core</span></span></code></pre></div><p><strong>安装es6转es5的插件</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki monokai"><code><span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">@babel/preset-env</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">--save-dev</span></span></code></pre></div><p><strong>.babelrc配置插件</strong></p><p>在根目录下，自己建.babelrc文件，这个文件用来做es6编译配置。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>\n<span class="line"><span style="color:#F8F8F2;">    &quot;presets&quot;: [&quot;@babel/preset-env&quot;]</span></span>\n<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><p><strong>代码中使用</strong></p><div class="language-javascript codearea-link" id="0ehd12qux81u"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> gulp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp&#39;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> babel </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;gulp-babel&quot;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;task1&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(){</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> gulp.</span><span style="color:#A6E22E;">src</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;src/js/1.js&#39;</span><span style="color:#F8F8F2;">)</span></span>\n<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">babel</span><span style="color:#F8F8F2;">())</span></span>\n<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(gulp.</span><span style="color:#A6E22E;">dest</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dist/js/&#39;</span><span style="color:#F8F8F2;">));</span></span>\n<span class="line"><span style="color:#F8F8F2;">})</span></span></code></pre><button class="link">将此代码在线运行</button></div><p><strong>如果不喜欢.babelrc，那么可以在babel中直接写</strong></p><div class="language-javascript codearea-link" id="zop163tgi3r"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> gulp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp&#39;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> babel </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;gulp-babel&quot;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;task1&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(){</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> gulp.</span><span style="color:#A6E22E;">src</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;src/js/1.js&#39;</span><span style="color:#F8F8F2;">)</span></span>\n<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">babel</span><span style="color:#F8F8F2;">({</span></span>\n<span class="line"><span style="color:#F8F8F2;">                    </span><span style="color:#E6DB74;">&quot;presets&quot;</span><span style="color:#F8F8F2;">:[</span><span style="color:#E6DB74;">&quot;@babel/preset-env&quot;</span><span style="color:#F8F8F2;">]</span></span>\n<span class="line"><span style="color:#F8F8F2;">                }))</span></span>\n<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(gulp.</span><span style="color:#A6E22E;">dest</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dist/js/&#39;</span><span style="color:#F8F8F2;">));</span></span>\n<span class="line"><span style="color:#F8F8F2;">})</span></span></code></pre><button class="link">将此代码在线运行</button></div><h2 id="合并" tabindex="-1">合并 <a class="header-anchor" href="#合并" aria-label="Permalink to &quot;合并&quot;">​</a></h2><div class="language-javascript codearea-link" id="l5qb4j6yxfs"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> gulp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp&#39;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> babel </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;gulp-babel&quot;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"><span style="color:#88846F;">// cnpm install --save-dev gulp-concat</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> concat </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp-concat&#39;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;task1&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(){</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> gulp.</span><span style="color:#A6E22E;">src</span><span style="color:#F8F8F2;">([</span><span style="color:#E6DB74;">&#39;src/js/1.js&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;src/js/0.js&#39;</span><span style="color:#F8F8F2;">])</span></span>\n<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">concat</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;bk.min.js&quot;</span><span style="color:#F8F8F2;">))</span></span>\n<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">babel</span><span style="color:#F8F8F2;">({</span><span style="color:#E6DB74;">&quot;presets&quot;</span><span style="color:#F8F8F2;">: [</span><span style="color:#E6DB74;">&quot;@babel/preset-env&quot;</span><span style="color:#F8F8F2;">]}))                </span></span>\n<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(gulp.</span><span style="color:#A6E22E;">dest</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dist/js/&#39;</span><span style="color:#F8F8F2;">));</span></span>\n<span class="line"><span style="color:#F8F8F2;">})</span></span></code></pre><button class="link">将此代码在线运行</button></div><h2 id="压缩-1" tabindex="-1">压缩 <a class="header-anchor" href="#压缩-1" aria-label="Permalink to &quot;压缩&quot;">​</a></h2><div class="language-javascript codearea-link" id="nuqh6tszxt"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> gulp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp&#39;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"><span style="color:#88846F;">// cnpm install --save-dev gulp-uglify</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> uglify </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp-uglify&#39;</span><span style="color:#F8F8F2;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;task1&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(){</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> gulp.</span><span style="color:#A6E22E;">src</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;src/js/1.js&#39;</span><span style="color:#F8F8F2;">)</span></span>\n<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">uglify</span><span style="color:#F8F8F2;">())</span></span>\n<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(gulp.</span><span style="color:#A6E22E;">dest</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dist/js/&#39;</span><span style="color:#F8F8F2;">));</span></span>\n<span class="line"><span style="color:#F8F8F2;">})</span></span></code></pre><button class="link">将此代码在线运行</button></div><h1 id="html" tabindex="-1">html <a class="header-anchor" href="#html" aria-label="Permalink to &quot;html&quot;">​</a></h1><h2 id="压缩html" tabindex="-1">压缩html <a class="header-anchor" href="#压缩html" aria-label="Permalink to &quot;压缩html&quot;">​</a></h2><div class="language-javascript codearea-link" id="0dpdoii5vz3k"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// cnpm install --save-dev gulp-minify-html</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> minifyHTML </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;gulp-minify-html&quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">//压缩html </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88846F;">// 处理HTML文件 </span></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;html&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() { </span></span>\n<span class="line"><span style="color:#F8F8F2;">	gulp.</span><span style="color:#A6E22E;">src</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;src/html/index.html&#39;</span><span style="color:#F8F8F2;">)</span></span>\n<span class="line"><span style="color:#F8F8F2;">		.</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">minifyHTML</span><span style="color:#F8F8F2;">({quotes:</span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">})) </span><span style="color:#88846F;">//是否保留引号 </span></span>\n<span class="line"><span style="color:#F8F8F2;">		.</span><span style="color:#A6E22E;">pipe</span><span style="color:#F8F8F2;">(gulp.</span><span style="color:#A6E22E;">dest</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dist/html/&#39;</span><span style="color:#F8F8F2;">)); </span></span>\n<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><button class="link">将此代码在线运行</button></div><h3 id="img处理" tabindex="-1">img处理 <a class="header-anchor" href="#img处理" aria-label="Permalink to &quot;img处理&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">gulp.task(&quot;images&quot;, function () {</span></span>\n<span class="line"><span style="color:#F8F8F2;"> 		//  &quot;src/images/**/*.{jpg,png,gif}&quot;   读取 当前文件夹 中的 文件 以及 子文件夹中的文件 .gif|png|jpg</span></span>\n<span class="line"><span style="color:#F8F8F2;">        return gulp.src(&quot;src/images/**/*.{png,jpg,gif}&quot;)</span></span>\n<span class="line"><span style="color:#F8F8F2;">            .pipe(gulp.dest(&quot;dist/images&quot;));</span></span>\n<span class="line"><span style="color:#F8F8F2;">    })</span></span></code></pre></div><h1 id="文件监听" tabindex="-1">文件监听 <a class="header-anchor" href="#文件监听" aria-label="Permalink to &quot;文件监听&quot;">​</a></h1><h2 id="gulp-3-写法" tabindex="-1">gulp 3 写法 <a class="header-anchor" href="#gulp-3-写法" aria-label="Permalink to &quot;gulp 3 写法&quot;">​</a></h2><div class="language-javascript codearea-link" id="u5cg6fqw34n"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// 监听：如果文件被修改，则执行相应任务 </span></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;auto&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> () { </span></span>\n<span class="line"><span style="color:#F8F8F2;">	gulp.</span><span style="color:#A6E22E;">watch</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;src/html/index.html&#39;</span><span style="color:#F8F8F2;">, [</span><span style="color:#E6DB74;">&#39;html&#39;</span><span style="color:#F8F8F2;">]); </span></span>\n<span class="line"><span style="color:#F8F8F2;">	gulp.</span><span style="color:#A6E22E;">watch</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;src/js/*.js&#39;</span><span style="color:#F8F8F2;">, [</span><span style="color:#E6DB74;">&#39;js&#39;</span><span style="color:#F8F8F2;">]); </span></span>\n<span class="line"><span style="color:#F8F8F2;">	gulp.</span><span style="color:#A6E22E;">watch</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;src/css/*.scss&#39;</span><span style="color:#F8F8F2;">, [</span><span style="color:#E6DB74;">&#39;scss&#39;</span><span style="color:#F8F8F2;">]); </span></span>\n<span class="line"><span style="color:#F8F8F2;">}); </span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88846F;">// 执行gulp的默认任务   命令行中直接执行 gulp （gulp 后面不需要跟任务名称）</span></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;default&#39;</span><span style="color:#F8F8F2;">, [</span><span style="color:#E6DB74;">&quot;auto&quot;</span><span style="color:#F8F8F2;">], </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">(){ </span></span>\n<span class="line"><span style="color:#F8F8F2;">	console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;默认任务&quot;</span><span style="color:#F8F8F2;">); </span></span>\n<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><button class="link">将此代码在线运行</button></div><h2 id="gulp-4-写法-主流" tabindex="-1">gulp 4+ 写法(主流) <a class="header-anchor" href="#gulp-4-写法-主流" aria-label="Permalink to &quot;gulp 4+ 写法(主流)&quot;">​</a></h2><div class="language-javascript codearea-link" id="vf6raqmtrwh"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// 执行auto任务时，执行abc和task2任务</span></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;auto&#39;</span><span style="color:#F8F8F2;">, gulp.</span><span style="color:#A6E22E;">series</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;abc&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;task2&#39;</span><span style="color:#F8F8F2;">) );</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#88846F;">// 执行auto任务时，执行abc任务，abc任务执行完毕后，执行回调函数中代码</span></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;auto&#39;</span><span style="color:#F8F8F2;">, gulp.</span><span style="color:#A6E22E;">series</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;abc&#39;</span><span style="color:#F8F8F2;">, ()</span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;">{</span></span>\n<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;..auto..&#39;</span><span style="color:#F8F8F2;">)</span></span>\n<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 监听src/js下所有的js文件，如果文件发生变化，执行abc任务</span></span>\n<span class="line"><span style="color:#F8F8F2;">    gulp.</span><span style="color:#A6E22E;">watch</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;./src/js/*.js&#39;</span><span style="color:#F8F8F2;">, gulp.</span><span style="color:#A6E22E;">series</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;abc&#39;</span><span style="color:#F8F8F2;">))</span></span>\n<span class="line"><span style="color:#F8F8F2;">}))</span></span></code></pre><button class="link">将此代码在线运行</button></div><h1 id="开启服务" tabindex="-1">开启服务 <a class="header-anchor" href="#开启服务" aria-label="Permalink to &quot;开启服务&quot;">​</a></h1><div class="language-javascript codearea-link" id="smswwmilbyk"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// cnpm install --save-dev gulp-connect</span></span>\n<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> connect </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;gulp-connect&#39;</span><span style="color:#F8F8F2;">);		</span><span style="color:#88846F;">// npm i -S gulp-connect</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F8F8F2;">gulp.</span><span style="color:#A6E22E;">task</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;myServer&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;">() {</span></span>\n<span class="line"><span style="color:#F8F8F2;">    connect.</span><span style="color:#A6E22E;">server</span><span style="color:#F8F8F2;">({</span></span>\n<span class="line"><span style="color:#F8F8F2;">        root: </span><span style="color:#E6DB74;">&#39;dist&#39;</span><span style="color:#F8F8F2;">,</span></span>\n<span class="line"><span style="color:#F8F8F2;">        port: </span><span style="color:#AE81FF;">8000</span><span style="color:#F8F8F2;">,</span></span>\n<span class="line"><span style="color:#F8F8F2;">        livereload: </span><span style="color:#AE81FF;">true</span></span>\n<span class="line"><span style="color:#F8F8F2;">    });</span></span>\n<span class="line"><span style="color:#F8F8F2;">    connect.</span><span style="color:#A6E22E;">server</span><span style="color:#F8F8F2;">({</span></span>\n<span class="line"><span style="color:#F8F8F2;">        root: </span><span style="color:#E6DB74;">&#39;src&#39;</span><span style="color:#F8F8F2;">,</span></span>\n<span class="line"><span style="color:#F8F8F2;">        port: </span><span style="color:#AE81FF;">8001</span><span style="color:#F8F8F2;">,</span></span>\n<span class="line"><span style="color:#F8F8F2;">        livereload: </span><span style="color:#AE81FF;">true</span></span>\n<span class="line"><span style="color:#F8F8F2;">    });</span></span>\n<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><button class="link">将此代码在线运行</button></div><p>上面的任务开启了两个服务器环境，livereload表示当文件被更改时是否自动刷新，有兼容问题。</p>', 75)
  ]));
}
const gulp = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  gulp as default
};
